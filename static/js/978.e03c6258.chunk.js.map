{"version":3,"file":"static/js/978.e03c6258.chunk.js","mappings":"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","sources":["common/enums/ListType.ts","common/enums/PopularHeaderType.ts","components/common/list/ListItems.tsx","components/common/list/List.tsx","components/custom/CustomImageFromApi.tsx","constants/configs.ts","utils/api/LocalSevice.ts","utils/api/BaseRequest.ts","utils/api/ThemoviedbAPIService.ts","components/search/SearchBox.tsx","common/functions/SetFavouriteAndWatchStatus.ts","components/search/SearchContainer.tsx","views/search/Index.tsx"],"sourcesContent":["\r\nexport enum ListType {Search , Watch, Favourite, Popular};","export enum PopularHeaderType {kids= \"the most popular kids movies\",\r\nyear2010= \"the best movies from 2010\",\r\nmovie= \"the most popular movies\"};","import {\r\n  Heart,\r\n  HeartFill,\r\n  BookmarkPlus,\r\n  BookmarkPlusFill,\r\n} from \"react-bootstrap-icons\";\r\nimport { iItemProps } from \"src/common/interfaces\";\r\nimport CustomImageFromApi from \"../../custom/CustomImageFromApi\";\r\nimport { ListType } from \"src/common/enums/ListType\";\r\n\r\nconst ListItems = ({\r\n  item,\r\n  toggleFavourite,\r\n  toggleWatchList,\r\n  type,\r\n}: iItemProps) => {\r\n  return type === ListType.Search ||\r\n    (type === ListType.Favourite && item.isFavourite) ||\r\n    (type === ListType.Watch && item.isWatchLater) ? (\r\n    <div className=\"row mt-5 w-100\">\r\n      <div className=\"col-xs-12\">\r\n        <li data-testid=\"item-list\">\r\n          <a href=\"#\" data-type=\"movies\" data-id={item.id}>\r\n            <div className=\"d-flex flex-sm-column flex-lg-row flex-xl-row  flex-xs-column item-list\">\r\n              <div className=\"left-side flex-lg-{grow|shrink}-1 \">\r\n                <CustomImageFromApi\r\n                  data-testid=\"backdrop_path\"\r\n                  src={item.backdrop_path}\r\n                  alt={item.original_title}\r\n                  className=\"w100\"\r\n                />\r\n              </div>\r\n              <div className=\" right-side\">\r\n                <div className=\"d-flex\">\r\n                  <div className=\"w-100\">\r\n                    <h2 className=\"movie-title\" data-testid=\"original_title\">\r\n                      {item.original_title}\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"flex-shrink-2 p-2\">\r\n                    <div className=\"d-flex\">\r\n                      {type === ListType.Search ||\r\n                      type === ListType.Favourite ? (\r\n                        !item.isFavourite ? (\r\n                          <Heart\r\n                            className=\"heart\"\r\n                            data-testid=\"heart\"\r\n                            color=\"gray\"\r\n                            size={30}\r\n                            title=\"add to favourite\"\r\n                            onClick={() => toggleFavourite(true, item)}\r\n                          />\r\n                        ) : (\r\n                          <HeartFill\r\n                            className=\"heart\"\r\n                            data-testid=\"heart\"\r\n                            color=\"rgb(161, 7, 7)\"\r\n                            size={30}\r\n                            title=\"delete from favourite\"\r\n                            onClick={() => toggleFavourite(false, item)}\r\n                          />\r\n                        )\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {type === ListType.Search || type === ListType.Watch ? (\r\n                        !item.isWatchLater ? (\r\n                          <BookmarkPlus\r\n                            className=\"watch\"\r\n                            data-testid=\"watch\"\r\n                            color=\"gray\"\r\n                            size={30}\r\n                            title=\"add to watch later\"\r\n                            onClick={() => toggleWatchList(true, item)}\r\n                          />\r\n                        ) : (\r\n                          <BookmarkPlusFill\r\n                            className=\"watch\"\r\n                            data-testid=\"watch\"\r\n                            color=\"rgb(55, 129, 55)\"\r\n                            size={30}\r\n                            title=\"delete from watch later\"\r\n                            onClick={() => toggleWatchList(false, item)}\r\n                          />\r\n                        )\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"movie-details\" data-testid=\"release_date\">\r\n                  {item.release_date}\r\n                </div>\r\n                <div className=\"movie-details\" data-testid=\"popularity\">\r\n                  popularity : {item.popularity}\r\n                </div>\r\n                <div className=\"movie-details\" data-testid=\"vote_average\">\r\n                  vote_average : {item.vote_average}\r\n                </div>\r\n                <div className=\"movie-description\" data-testid=\"overview\">\r\n                  {item.overview}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </a>\r\n        </li>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default ListItems;\r\n","import { useEffect, useState } from \"react\";\r\nimport { iItemListProps, iItem } from \"src/common/interfaces\";\r\nimport ListItems from \"./ListItems\";\r\nimport LocalSevice from \"src/utils/api/LocalSevice\";\r\nimport \"../style/Style.scss\";\r\n\r\nconst List = ({ items, type }: iItemListProps) => {\r\n  const [filmsList, setFilmsList] = useState<iItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    setFilmsList(items);\r\n  }, [items]);\r\n\r\n  const toggleFavourite = (action: boolean, item: iItem) => {\r\n    const myNextList = [...filmsList];\r\n    const itemSearch = myNextList.find((t) => t.id === item.id);\r\n    if (itemSearch) {\r\n      itemSearch.isFavourite = action;\r\n      setFilmsList(myNextList);\r\n\r\n      if (action) {\r\n        LocalSevice.addToFavouriteList(item);\r\n      } else {\r\n        LocalSevice.deleteFromFavouriteList(item.id);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleWatchList = (action: boolean, item: iItem) => {\r\n    const myNextList = [...filmsList];\r\n    const itemSearch = myNextList.find((t) => t.id === item.id);\r\n    if (itemSearch) {\r\n      itemSearch.isWatchLater = action;\r\n      setFilmsList(myNextList);\r\n\r\n      if (action) {\r\n        LocalSevice.addToWatchList(item);\r\n      } else {\r\n        LocalSevice.deleteFromWatchList(item.id);\r\n      }\r\n    }\r\n  };\r\n\r\n  return items && items?.length > 0 ? (\r\n    <div className=\"row mt-5\">\r\n      <div className=\"col-xs-12\">\r\n        <ul\r\n          className=\"d-flex flex-column justify-content-between align-items-center header-search-result-wrapper\"\r\n          data-testid=\"ul-list\"\r\n        >\r\n          {items.map((item: iItem) => (\r\n            <ListItems\r\n              key={item?.id}\r\n              item={item}\r\n              type={type}\r\n              toggleFavourite={toggleFavourite}\r\n              toggleWatchList={toggleWatchList}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"list-is-empty-container\">\r\n      <div className=\"list-is-empty\">\r\n        <span data-testid=\"empty-list\">List is empty.</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { CustomImageType } from \"src/common/types/CustomImageType\";\r\nimport { Image_SERVER_ADDRESS } from \"src/constants/configs\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n\r\nconst CustomImageFromApi = (items: CustomImageType) => {\r\n  return (\r\n    <LazyLoadImage\r\n      data-testid={items[\"data-testid\"]}\r\n      src={`${Image_SERVER_ADDRESS}/w500${items.src}`}\r\n      alt={items.alt}\r\n      className={items.className}\r\n      effect=\"blur\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomImageFromApi;\r\n","export const SERVER_ADDRESS = process.env.REACT_APP_API_URL;\r\nexport const API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const Image_SERVER_ADDRESS = process.env.REACT_APP_Image_URL;","import { iItem } from \"src/common/interfaces\";\r\n\r\nconst LocalSevice = { \r\n  getFavouriteList: async () => {\r\n    let res: iItem[] = JSON.parse(localStorage.getItem(\"favouriteList\") || \"[]\");\r\n    return res;\r\n  },\r\n  getWatchList: async () => {\r\n    let res: iItem[] = JSON.parse(localStorage.getItem(\"watchList\") || \"[]\");\r\n    return res;\r\n  \r\n  }, getDataFromLS: async (type : string) => {\r\n    if (type === \"favourite\"){\r\n      return await LocalSevice.getFavouriteList();\r\n    }else {\r\n      return await LocalSevice.getWatchList();\r\n    }\r\n  },\r\n  addToFavouriteList: async (item: iItem) => {\r\n    let res: iItem[] = JSON.parse(localStorage.getItem(\"favouriteList\") || \"[]\");\r\n    res.push(item);\r\n    localStorage.setItem(\"favouriteList\", JSON.stringify(res));\r\n  },\r\n  addToWatchList: async (item: iItem) => {\r\n    let res: iItem[] = JSON.parse(localStorage.getItem(\"watchList\") || \"[]\");\r\n    res.push(item);\r\n    localStorage.setItem(\"watchList\", JSON.stringify(res));\r\n  },\r\n  deleteFromFavouriteList: async (itemId: number) => {\r\n    let res: iItem[] = JSON.parse(localStorage.getItem(\"favouriteList\") || \"[]\");    \r\n    localStorage.setItem(\"favouriteList\", JSON.stringify([...res.filter(t => t.id !== itemId)]));\r\n  },\r\n  deleteFromWatchList: async (itemId: number) => {\r\n    let res: iItem[] = JSON.parse(localStorage.getItem(\"watchList\") || \"[]\");    \r\n    localStorage.setItem(\"watchList\", JSON.stringify([...res.filter(t => t.id !== itemId)]));\r\n  }\r\n};\r\n\r\nexport default LocalSevice;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { SERVER_ADDRESS } from \"src/constants/configs\";\r\n\r\nconst TIMEOUT_DELAY = 100000;\r\n\r\nexport default async function BaseRequest(\r\n  path: string,\r\n  method: string,\r\n  params?: object,\r\n  data?: object,\r\n  otherOptions?: object,\r\n  getCancelToken?: any\r\n) {\r\n  if (!window.navigator.onLine) {\r\n    toast.error(\"check your internet connection!\");\r\n    return Promise.reject({ isTimeout: false, error: 12029 });\r\n  }\r\n  let timeout = null;\r\n  const CancelToken = axios.CancelToken;\r\n  const source = CancelToken.source();\r\n  getCancelToken && getCancelToken(source);\r\n  timeout = setTimeout(() => {\r\n    source.cancel();\r\n  }, TIMEOUT_DELAY);\r\n  const API = SERVER_ADDRESS;\r\n  try {\r\n    const response = await axios({\r\n      url: `${API}${path}/`,\r\n      method: method === \"post\" && data ? \"POST\" : method,     \r\n      params: params,\r\n      cancelToken: source.token,\r\n      data,\r\n      ...otherOptions, \r\n    });\r\n\r\n    if (response.status >= 200 && response.status < 300) {\r\n      if (timeout) clearTimeout(timeout);\r\n      return response.data;\r\n    } else {\r\n      if (timeout) clearTimeout(timeout);\r\n      toast.error(\"server error\");\r\n      return Promise.reject({ isTimeout: false, error: 101 });\r\n    }\r\n  } catch (err: any) {\r\n    if (timeout) clearTimeout(timeout);\r\n    toast.error(\"server error\");\r\n    return Promise.reject({\r\n      isTimeout: axios.isCancel(err),\r\n      response: err,\r\n      status: err.response && err.response.status,\r\n    });\r\n  }\r\n}\r\n","import BaseRequest from \"./BaseRequest\";\r\nimport { API_KEY } from \"src/constants/configs\";\r\nimport { PopularHeaderType } from \"src/common/enums/PopularHeaderType\";\r\n\r\nconst ThemoviedbAPIService = { \r\n  getHighestRatedMovies: async () => {\r\n    const res = await BaseRequest(\"/discover/movie/\" ,\"GET\" ,\r\n    {\r\n      sort_by:\"popularity.desc\",\r\n      api_key: API_KEY\r\n    });\r\n    return res;\r\n  },\r\n  getHighestRatedChild: async () => {\r\n    const res = await BaseRequest(\"/discover/movie/\" ,\"GET\" ,\r\n    {\r\n      certification_country: \"US\",\r\n      \"certification.lte\": \"G\",\r\n      sort_by:\"popularity.desc\",\r\n      api_key: API_KEY\r\n    });\r\n    return res;\r\n  } , \r\n  getHighestRatedMovies2010: async () => {\r\n    const res = await BaseRequest(\"/discover/movie/\" ,\"GET\" ,\r\n    {\r\n      primary_release_year: \"2010\",\r\n      sort_by:\"vote_average.desc\",\r\n      api_key: API_KEY\r\n    });\r\n    return res;\r\n  }, getHighestRated: async (type : PopularHeaderType) => {\r\n    if (type === PopularHeaderType.movie){\r\n      return await ThemoviedbAPIService.getHighestRatedMovies();\r\n    }else if (type === PopularHeaderType.kids){\r\n      return await ThemoviedbAPIService.getHighestRatedChild();\r\n    }else {\r\n      return await ThemoviedbAPIService.getHighestRatedMovies2010();\r\n    }\r\n    },    \r\n    getSearchByName: async (name : string) => {\r\n      const res = await BaseRequest(\"/search/movie/\" ,\"GET\" ,\r\n      {\r\n        query: name,\r\n        api_key: API_KEY\r\n      });\r\n      return res;\r\n    }, \r\n};\r\n\r\nexport default ThemoviedbAPIService;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { iSearchProps } from \"src/common/interfaces\";\r\nimport { SearchType } from \"src/common/types\";\r\nimport \"./style/style.scss\";\r\n\r\nconst SearchBox = ({ handleSubmitForm }: iSearchProps) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<SearchType>({});\r\n\r\n  const onSubmit = handleSubmit((data: SearchType) => {\r\n    handleSubmitForm(data);\r\n  });\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n        <div className=\"search-result-wrapper\">\r\n          <div className=\"search-suggest-gradient\">\r\n            <form className=\"search-suggest-form\" onSubmit={onSubmit}>\r\n              <div className=\"search-result-input-wrapper\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <div className=\"flex-grow-2 w-100\">\r\n                    <input\r\n                      data-testid=\"input-search\"\r\n                      type=\"searchText\"\r\n                      id=\"js__search-text\"\r\n                      placeholder=\"Search in film, actor, ...\"\r\n                      {...register(\"searchText\", {\r\n                        maxLength: 500,\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-grow-1\">\r\n                    <button\r\n                      data-testid=\"btn-search\"\r\n                      type=\"submit\"\r\n                      className=\"c-btn-Search ml-5 mr-5 text-white\"\r\n                    >\r\n                      Search\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import LocalSevice from \"src/utils/api/LocalSevice\";\r\nimport { iItem } from \"../interfaces\";\r\n\r\n const setFavouriteAndWatchStatus = async (data: iItem[]) => {\r\n    let favourite = await LocalSevice.getFavouriteList();\r\n    let watchList = await LocalSevice.getWatchList();\r\n\r\n    const myNextList = [...data];\r\n\r\n    if (favourite) {\r\n      const favouriteArrayFiltered = data.filter((el: iItem) => {\r\n        return favourite.some((f: iItem) => {\r\n          return f.id === el.id;\r\n        });\r\n      });\r\n\r\n      favouriteArrayFiltered.forEach((element: iItem) => {\r\n        const itemSearch = myNextList.find((t: iItem) => t.id === element.id);\r\n        if (itemSearch) {\r\n          itemSearch.isFavourite = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (watchList) {\r\n      const watchArrayFiltered = data.filter((el: iItem) => {\r\n        return watchList.some((f: iItem) => {\r\n          return f.id === el.id;\r\n        });\r\n      });\r\n\r\n      watchArrayFiltered.forEach((element: iItem) => {\r\n        const itemSearch = myNextList.find((t: iItem) => t.id === element.id);\r\n        if (itemSearch) {\r\n          itemSearch.isWatchLater = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return myNextList;\r\n  };\r\n\r\n  export default setFavouriteAndWatchStatus;","import { Suspense, useState } from \"react\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport List from \"src/components/common/list/List\";\r\nimport ThemoviedbAPIService from \"src/utils/api/ThemoviedbAPIService\";\r\nimport { iItem } from \"src/common/interfaces\";\r\nimport { SearchType } from \"src/common/types\";\r\nimport Spinner from \"src/components/custom/Spinner\";\r\nimport { ListType } from \"src/common/enums/ListType\";\r\nimport SetFavouriteAndWatchStatus from \"src/common/functions/SetFavouriteAndWatchStatus\";\r\n\r\nconst SearchContainer = () => {\r\n  const [filmsList, setFilmsList] = useState<iItem[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleSubmitForm = async (data: SearchType) => {\r\n    setIsLoading(true);\r\n    let list = await ThemoviedbAPIService.getSearchByName(data.searchText);\r\n\r\n    if (list) {\r\n      let result = list?.results.filter((t: iItem) => t.backdrop_path != null);\r\n      setFilmsList(await SetFavouriteAndWatchStatus(result));\r\n    } else {\r\n      setFilmsList([]);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBox handleSubmitForm={handleSubmitForm} />\r\n      {isLoading && <Spinner />}\r\n      {filmsList && !isLoading && (\r\n        <Suspense fallback={<Spinner />}>\r\n          <List items={filmsList} type={ListType.Search} />\r\n        </Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchContainer;\r\n","import SearchContainer from \"src/components/search/SearchContainer\";\r\n\r\nconst Index = () => {\r\n  return <SearchContainer />;\r\n};\r\n\r\nexport default Index;\r\n"],"names":["ListType","PopularHeaderType","item","toggleFavourite","toggleWatchList","type","isFavourite","isWatchLater","className","href","id","CustomImageFromApi","src","backdrop_path","alt","original_title","color","size","title","onClick","release_date","popularity","vote_average","overview","items","useState","filmsList","setFilmsList","useEffect","action","myNextList","itemSearch","find","t","LocalSevice","length","map","LazyLoadImage","Image_SERVER_ADDRESS","effect","width","height","SERVER_ADDRESS","process","API_KEY","getFavouriteList","res","JSON","parse","localStorage","getItem","getWatchList","getDataFromLS","addToFavouriteList","push","setItem","stringify","addToWatchList","deleteFromFavouriteList","itemId","filter","deleteFromWatchList","TIMEOUT_DELAY","BaseRequest","path","method","params","data","otherOptions","getCancelToken","window","navigator","onLine","toast","Promise","reject","isTimeout","error","timeout","CancelToken","axios","source","setTimeout","cancel","API","url","cancelToken","token","response","status","clearTimeout","ThemoviedbAPIService","getHighestRatedMovies","sort_by","api_key","getHighestRatedChild","certification_country","getHighestRatedMovies2010","primary_release_year","getHighestRated","getSearchByName","name","query","handleSubmitForm","useForm","register","handleSubmit","onSubmit","formState","errors","placeholder","maxLength","setFavouriteAndWatchStatus","favourite","watchList","el","some","f","forEach","element","isLoading","setIsLoading","searchText","list","result","results","SetFavouriteAndWatchStatus","Spinner","Suspense","fallback","List"],"sourceRoot":""}